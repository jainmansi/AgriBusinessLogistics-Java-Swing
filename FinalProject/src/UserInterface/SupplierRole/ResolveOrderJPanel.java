/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SupplierRole;

import Business.Inventory.InventoryItem;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Sensors.RFID;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.SupplierReceivedWorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Queue;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author user
 */
public class ResolveOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResolveOrderJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Network network;
    private SupplierReceivedWorkRequest request;
    private PendingOrdersJPanel pojp;

    public ResolveOrderJPanel(JPanel userProcessContainer, UserAccount account, Network network, SupplierReceivedWorkRequest request, PendingOrdersJPanel pojp) {
        initComponents();
        this.account = account;
        this.userProcessContainer = userProcessContainer;
        this.network = network;
        this.request = request;
        this.pojp = pojp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        msgTxtField = new javax.swing.JTextField();
        submitTxtField = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(96, 125, 139));
        jLabel2.setText("Resolve Order");

        jLabel1.setText("Message to Retailer:");

        submitTxtField.setText("Submit");
        submitTxtField.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        submitTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitTxtFieldActionPerformed(evt);
            }
        });

        backBtn.setText("<< Back");
        backBtn.setBorder(new javax.swing.border.MatteBorder(null));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1)
                        .addGap(37, 37, 37)
                        .addComponent(msgTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(submitTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(msgTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(submitTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        pojp.populatePendingOrdersJTable();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void submitTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitTxtFieldActionPerformed
        request.setMessage(msgTxtField.getText());
        String date = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss").format(new Date());
        request.setResolveDate(date);
        request.setStatus("Completed");
        int qty = request.getQuantity();
        Order o = request.getOrder();
        //Queue<RFID> temp = null;
        for (OrderItem oi : o.getOrderItemList()) {
            for (InventoryItem ii : account.getInventory().getInventoryList()) {
                if (ii.getProduct().getName().equals(request.getProduct().getName())) {
                    for(int i = 0; i < qty; i++){
                        RFID rfid = ii.getRfid().remove();
                        rfid.setRetailer(request.getSender());
                        rfid.setSupplierShippingDate(date);
                        oi.getRfid().add(rfid);                        
                    }
                    ii.setQuantity(ii.getRfid().size());
                }
            }
            for (InventoryItem rii : request.getSender().getInventory().getInventoryList()) {
                if(rii.getProduct().getName().equals(request.getProduct().getName())){
                    Queue<RFID> temp = oi.getRfid();
                    for(int i = 0; i < qty; i++)
                        rii.getRfid().add(temp.remove());
                    rii.setQuantity(rii.getRfid().size());
                }
            }
        }
        resetFields();
        network.getMasterOrderCatalog().addOrder(o);
        JOptionPane.showMessageDialog(null, "Order resolved successfully!");
    }//GEN-LAST:event_submitTxtFieldActionPerformed

    private void resetFields() {
        msgTxtField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField msgTxtField;
    private javax.swing.JButton submitTxtField;
    // End of variables declaration//GEN-END:variables
}
